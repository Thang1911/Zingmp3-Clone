"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Podcast = void 0;
const base_1 = require("../base");
class Podcast extends base_1.Base {
    getPodcast() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createNoIdSig('/api/v2/page/get/radio');
                return yield this.createRequest('/api/v2/page/get/radio', {
                    sig,
                });
            }
            catch (err) {
                throw err;
            }
        });
    }
    getTopPodcast() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createNoIdSig('/api/v2/podcast/program/get/top-episode');
                return yield this.createRequest('/api/v2/podcast/program/get/top-episode', {
                    sig,
                });
            }
            catch (err) {
                throw err;
            }
        });
    }
    getPodcastUrl(podcastId) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createIdSig('/api/v2/podcast/episode/get/streaming', podcastId);
                return yield this.createRequest('/api/v2/podcast/episode/get/streaming', {
                    id: podcastId,
                    sig,
                });
            }
            catch (error) {
                throw error;
            }
        });
    }
    getPodcastDetail(podcastId) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createIdSig('/api/v2/page/get/hub-detail', podcastId);
                return yield this.createRequest('/api/v2/page/get/hub-detail', {
                    id: podcastId,
                    sig,
                });
            }
            catch (err) {
                throw err;
            }
        });
    }
    getPodcastInfo(podcastId) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createIdSig('/api/v2/page/get/podcast-program', podcastId);
                return yield this.createRequest('/api/v2/page/get/podcast-program', {
                    id: podcastId,
                    sig,
                });
            }
            catch (error) {
                throw error;
            }
        });
    }
    getPodcastPlaylist(podcastPlaylistId, page = 1) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createPodcastSig('/api/v2/podcast/episode/get/list', podcastPlaylistId, page);
                return yield this.createRequest('/api/v2/podcast/episode/get/list', {
                    id: podcastPlaylistId,
                    page,
                    count: 20,
                    sig,
                });
            }
            catch (error) {
                throw error;
            }
        });
    }
    getPodcastByGenre(genreId, page = 1) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createPodcastSig('/api/v2/podcast/program/get/list-by-cate', genreId, page);
                return yield this.createRequest('/api/v2/podcast/program/get/list-by-cate', {
                    id: genreId,
                    page,
                    count: 20,
                    sig,
                });
            }
            catch (err) {
                throw err;
            }
        });
    }
    getPodcastCategories() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createNoIdSig('/api/v2/podcast/program/get/podcast-categories');
                return yield this.createRequest('/api/v2/podcast/program/get/podcast-categories', {
                    sig,
                });
            }
            catch (err) {
                throw err;
            }
        });
    }
    getNewestPodcast() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createNoIdSig('/api/v2/podcast/program/get/list-by-type');
                return sig;
            }
            catch (err) {
                throw err;
            }
        });
    }
}
exports.Podcast = Podcast;
