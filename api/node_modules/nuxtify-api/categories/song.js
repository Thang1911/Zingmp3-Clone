"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Song = void 0;
const base_1 = require("../base");
class Song extends base_1.Base {
    getSongUrl(songId) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createIdSig('/api/v2/song/get/streaming', songId);
                return yield this.createRequest('/api/v2/song/get/streaming', {
                    id: songId,
                    sig,
                });
            }
            catch (error) {
                throw error;
            }
        });
    }
    getSongDetail(songId) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createIdSig('/api/v2/song/get/info', songId);
                return yield this.createRequest('/api/v2/song/get/info', {
                    id: songId,
                    sig,
                });
            }
            catch (err) {
                throw err;
            }
        });
    }
    getLyrics(songId) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createIdSig('/api/v2/lyric/get/lyric', songId);
                return yield this.createRequest('/api/v2/lyric/get/lyric', {
                    id: songId,
                    sig,
                });
            }
            catch (err) {
                throw err;
            }
        });
    }
    getNewReleaseSongs() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const res = yield this.createRequest('/api/v2/page/get/newrelease-chart', {
                    sig: this.createNoIdSig('/api/v2/page/get/newrelease-chart'),
                });
                return res;
            }
            catch (err) {
                throw err;
            }
        });
    }
    getPlaylist(playlistId) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createIdSig('/api/v2/page/get/playlist', playlistId);
                return yield this.createRequest('/api/v2/page/get/playlist', {
                    id: playlistId,
                    sig,
                });
            }
            catch (err) {
                throw err;
            }
        });
    }
}
exports.Song = Song;
