"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Nuxtify = void 0;
const podcast_1 = require("./categories/podcast");
const base_1 = require("./base");
const song_1 = require("./categories/song");
const search_1 = require("./categories/search");
const video_1 = require("./categories/video");
const chart_1 = require("./categories/chart");
class NuxtifyApi extends base_1.Base {
    constructor(apiKey, secretKey) {
        super(apiKey, secretKey);
        this.podcast = new podcast_1.Podcast(apiKey, secretKey);
        this.song = new song_1.Song(apiKey, secretKey);
        this.search = new search_1.Search(apiKey, secretKey);
        this.video = new video_1.Video(apiKey, secretKey);
        this.chart = new chart_1.Chart(apiKey, secretKey);
    }
    getHome() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createHomeSig('/api/v2/page/get/home');
                return yield this.createRequest('/api/v2/page/get/home', {
                    page: 1,
                    count: 30,
                    sig,
                });
            }
            catch (error) {
                throw error;
            }
        });
    }
    getTop100() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createNoIdSig('/api/v2/page/get/top-100');
                return yield this.createRequest('/api/v2/page/get/top-100', { sig });
            }
            catch (err) {
                throw err;
            }
        });
    }
    getArtist(alias) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createNoIdSig('/api/v2/page/get/artist');
                return yield this.createRequest('/api/v2/page/get/artist', {
                    alias,
                    sig,
                });
            }
            catch (err) {
                throw err;
            }
        });
    }
    getGenres() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const sig = this.createNoIdSig('/api/v2/page/get/hub-home');
                return yield this.createRequest('/api/v2/page/get/hub-home', {
                    sig,
                });
            }
            catch (err) {
                throw err;
            }
        });
    }
}
const Nuxtify = new NuxtifyApi('X5BM3w8N7MKozC0B85o4KMlzLZKhV00y', 'acOrvUS15XRW2o9JksiK1KgQ6Vbds8ZW');
exports.Nuxtify = Nuxtify;
